name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#      - name: Set up JDK 21
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '21'
#
#      - name: Build backend
#        working-directory: 10_CloudCI/backend
#        run: |
#          ./mvnw clean package -DskipTests

      - name: Build Docker Image Backend
        working-directory: 10_CloudCI/backend
        run: |
          docker build -t mavos01/backend:latest -f Dockerfile .

#      - name: Set up Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: '18'
#
#      - name: Build frontend
#        working-directory: 10_CloudCI/frontend
#        run: |
#          npm install
#          npm run build

      - name: Build Docker Image Frontend
        working-directory: 10_CloudCI/frontend
        run: |
          docker build -t mavos01/frontend:latest -f Dockerfile .

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Images to Docker Hub
        run: |
          docker push mavos01/backend:latest
          docker push mavos01/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/e-business.pem
          chmod 600 /tmp/e-business.pem

      - name: Start SSH agent
        run: |
          eval "$(ssh-agent -s)"
          ssh-add /tmp/e-business.pem

      - name: Pull Backend Docker Image
        run: |
          ssh -i /tmp/e-business.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.AWS_EC2_IP }} "docker pull mavos01/backend:latest"

      - name: Deploy Backend to EC2
        run: |
          ssh -i /tmp/e-business.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.AWS_EC2_IP }} "docker run -d --name backend --network my-network -p 8080:8080 mavos01/backend:latest"

      - name: Pull Frontend Docker Image
        run: |
          ssh -i /tmp/e-business.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.AWS_EC2_IP }} "docker pull mavos01/frontend:latest"

      - name: Deploy Frontend to EC2
        run: |
          ssh -i /tmp/e-business.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.AWS_EC2_IP }} "docker run -d --name frontend --network my-network -p 3000:3000 mavos01/frontend:latest"